[package]
name = "openai-sdk-rs"
version = "0.1.2"
edition = "2021"
description = "Unofficial, minimal async OpenAI API client for Rust with support for Chat Completions, Embeddings, Responses API, and tool calling."
license = "MIT OR Apache-2.0"
repository = "https://github.com/neeboo/openai-sdk-rs"
homepage = "https://github.com/neeboo/openai-sdk-rs"
documentation = "https://docs.rs/openai-sdk-rs"
keywords = ["openai", "api", "chat", "embeddings", "async"]
categories = ["api-bindings", "asynchronous", "web-programming"]
readme = "README.md"
authors = ["neeboo <ghostcorn@gmail.com>"]
exclude = [
    "target/*",
    ".git/*",
    ".github/*",
    "*.env*",
    ".vscode/*"
]

# docs.rs 优化
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]

[dependencies]
reqwest = { version = "0.12", default-features = false, features = ["json", "rustls-tls", "stream", "multipart"] }
serde = { version = "1", features = ["derive"] }
serde_json = "1"
thiserror = "1"
tokio = { version = "1", features = ["macros"] }
url = "2"
futures-util = { version = "0.3", default-features = false, features = ["std"] }
futures-core = "0.3"
async-stream = "0.3"
dotenv = "0.15"

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
reqwest = { version = "0.12", default-features = false, features = ["gzip", "brotli"] }
tokio = { version = "1", features = ["rt-multi-thread"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio_with_wasm = { version = "0.8.7", features = ["macros", "time"] }
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.4"

[dev-dependencies]
anyhow = "1"

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
wiremock = { version = "0.6" }

[target.'cfg(target_arch = "wasm32")'.dev-dependencies]
wasm-bindgen-test = "0.3"
web-sys = { version = "0.3", features = [
    "console"
] }
